var Parse = {
  server: 'http://localhost:3000/api/cows',
  create: function (cow, successCB, errorCB = null) {
    $.ajax({
      url: Parse.server,
      type: 'POST',
      data: JSON.stringify(cow),
      contentType: 'application/json',
      success: successCB,
      error: errorCB || function (error) {
        console.error('cows: Failed to create cow', error);
      }
    });
  },
  readAll: function (successCB, errorCB = null) {
    $.ajax({
      url: Parse.server,
      type: 'GET',
      contentType: 'application/json',
      success: successCB,
      error: errorCB || function (error) {
        console.error('cows: Failed to fetch cows', error);
      }
    });
  }
};
export default Parse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3B1YmxpYy9wYXJzZS5qcyJdLCJuYW1lcyI6WyJQYXJzZSIsInNlcnZlciIsImNyZWF0ZSIsImNvdyIsInN1Y2Nlc3NDQiIsImVycm9yQ0IiLCIkIiwiYWpheCIsInVybCIsInR5cGUiLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsImNvbnRlbnRUeXBlIiwic3VjY2VzcyIsImVycm9yIiwiY29uc29sZSIsInJlYWRBbGwiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLEtBQUssR0FBRztBQUNWQyxFQUFBQSxNQUFNLEVBQUUsZ0NBREU7QUFFVkMsRUFBQUEsTUFBTSxFQUFFLFVBQVVDLEdBQVYsRUFBZUMsU0FBZixFQUEwQkMsT0FBTyxHQUFHLElBQXBDLEVBQTBDO0FBQ2hEQyxJQUFBQSxDQUFDLENBQUNDLElBQUYsQ0FBTztBQUNMQyxNQUFBQSxHQUFHLEVBQUVSLEtBQUssQ0FBQ0MsTUFETjtBQUVMUSxNQUFBQSxJQUFJLEVBQUUsTUFGRDtBQUdMQyxNQUFBQSxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBTCxDQUFlVCxHQUFmLENBSEQ7QUFJTFUsTUFBQUEsV0FBVyxFQUFFLGtCQUpSO0FBS0xDLE1BQUFBLE9BQU8sRUFBRVYsU0FMSjtBQU1MVyxNQUFBQSxLQUFLLEVBQUVWLE9BQU8sSUFBSSxVQUFVVSxLQUFWLEVBQWlCO0FBQ2pDQyxRQUFBQSxPQUFPLENBQUNELEtBQVIsQ0FBYyw0QkFBZCxFQUE0Q0EsS0FBNUM7QUFDRDtBQVJJLEtBQVA7QUFVRCxHQWJTO0FBY1ZFLEVBQUFBLE9BQU8sRUFBRSxVQUFVYixTQUFWLEVBQXFCQyxPQUFPLEdBQUcsSUFBL0IsRUFBcUM7QUFDNUNDLElBQUFBLENBQUMsQ0FBQ0MsSUFBRixDQUFPO0FBQ0xDLE1BQUFBLEdBQUcsRUFBRVIsS0FBSyxDQUFDQyxNQUROO0FBRUxRLE1BQUFBLElBQUksRUFBRSxLQUZEO0FBR0xJLE1BQUFBLFdBQVcsRUFBRSxrQkFIUjtBQUlMQyxNQUFBQSxPQUFPLEVBQUVWLFNBSko7QUFLTFcsTUFBQUEsS0FBSyxFQUFFVixPQUFPLElBQUksVUFBVVUsS0FBVixFQUFpQjtBQUNqQ0MsUUFBQUEsT0FBTyxDQUFDRCxLQUFSLENBQWMsNEJBQWQsRUFBNENBLEtBQTVDO0FBQ0Q7QUFQSSxLQUFQO0FBU0Q7QUF4QlMsQ0FBWjtBQTBCQSxlQUFlZixLQUFmIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFBhcnNlID0ge1xuICBzZXJ2ZXI6ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL2Nvd3MnLFxuICBjcmVhdGU6IGZ1bmN0aW9uIChjb3csIHN1Y2Nlc3NDQiwgZXJyb3JDQiA9IG51bGwpIHtcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiBQYXJzZS5zZXJ2ZXIsXG4gICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShjb3cpLFxuICAgICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIHN1Y2Nlc3M6IHN1Y2Nlc3NDQixcbiAgICAgIGVycm9yOiBlcnJvckNCIHx8IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdjb3dzOiBGYWlsZWQgdG8gY3JlYXRlIGNvdycsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgcmVhZEFsbDogZnVuY3Rpb24gKHN1Y2Nlc3NDQiwgZXJyb3JDQiA9IG51bGwpIHtcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiBQYXJzZS5zZXJ2ZXIsXG4gICAgICB0eXBlOiAnR0VUJyxcbiAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICBzdWNjZXNzOiBzdWNjZXNzQ0IsXG4gICAgICBlcnJvcjogZXJyb3JDQiB8fCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignY293czogRmFpbGVkIHRvIGZldGNoIGNvd3MnLCBlcnJvcik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn07XG5leHBvcnQgZGVmYXVsdCBQYXJzZTtcbiJdfQ==